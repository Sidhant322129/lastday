class factorial{
    private static final int max=20;
    private static long[] fac = new long[max+1];
    
    static {
        fac[0]=1;
        for(int i =1 ;i<=max;i++){
        fac[i]=fac[i-1]*i;
        }
    }
    
    static long getfactorial(int x)
    {
        if(x<0){
            throw new IllegalArgumentException("\nCannot divide by zero");
            
        }
        if(x>max)
        {
            throw new IllegalArgumentException("\nResult will overflow");
        }
        return fac[x];
    }
    
}
public class Main{
    public static void main(String[] args){
        int testval[] = {0,5,20,21,-1};
        
        for(int x : testval)
        {   
            try{
            System.out.println("factorial of " +x +" is " +factorial.getfactorial(x));
            
            } catch (IllegalArgumentException e) {
                System.out.println("error for input:" +x +e.getMessage());
            }
        }
    }
}//https://github.com/Sidhant322129/lastday.git

/////below math operation program using packages/////
package mathop;
public class mathops {
    public static int add(int a,int b){
        return a+b;

    }

    public static int sub(int a,int b){
        return a-b;
    }

    public static int mul(int a,int b) {
        return a * b;
    }

    public static double div(int a,int b)
    {
        if(b==0){
            throw new ArithmeticException("cannot divide by zero");
        }
        return (double) a/b;
    }

    public static int exponent(int base,int expo)
    {
        int result=1;
        for(int i=0;i<expo;i++)
        {
            result*=base;
        }
        return result;

    }

}

/////2nd part///
package Mathcal;
import mathop.mathops;
import java.util.Scanner;

public class Mathcals {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        while (true) {
            System.out.println("\nMathematical Operations Calculator");
            System.out.println("---------------------------------");
            System.out.println("1. Addition");
            System.out.println("2. Subtraction");
            System.out.println("3. Multiplication");
            System.out.println("4. Division");
            System.out.println("5. Power");
            System.out.println("6. Exit");
            System.out.print("Enter your choice (1-6): ");

            int choice = sc.nextInt();

            if (choice == 6) {
                System.out.println("Exiting calculator");
                break;
            }

            if (choice < 1 || choice > 6) {
                System.out.println("Invalid choice! Please try again.");
                continue;
            }

            System.out.print("Enter first number: ");
            int num1 = sc.nextInt();
            System.out.print("Enter second number: ");
            int num2 = sc.nextInt();

            double result = 0;
            String operation = "";

            try {
                switch (choice) {
                    case 1:
                        result = mathops.add(num1, num2);
                        operation = "Addition";
                        break;

                    case 2:
                        result = mathops.sub(num1, num2);
                        operation = "Subtraction";
                        break;

                    case 3:
                        result = mathops.mul(num1, num2);
                        operation = "Multiplication";
                        break;

                    case 4:
                        result = mathops.div(num1, num2);
                        operation = "Division";
                        break;

                    case 5:
                        result = mathops.exponent(num1, num2);
                        operation = "Power";
                        break;
                }
                System.out.println(operation + " result: " + result);

            } catch (ArithmeticException e) {
                System.out.println("Error: " + e.getMessage());
            }
        }
        sc.close();
    }

}

